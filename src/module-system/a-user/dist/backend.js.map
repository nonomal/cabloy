{"version":3,"file":"backend.js","mappings":";;;;;;AAAA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;AChCA,kBAAkB,mBAAO,CAAC,GAAsB;AAChD,uBAAuB,mBAAO,CAAC,GAA2B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;;;;;;;;ACHA;AACA,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1EA,0BAA0B,mBAAO,CAAC,GAA+B;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,kDAAkD,sCAAsC;AACxF;AACA;;AAEA;AACA,qDAAqD,sCAAsC;AAC3F;AACA;;AAEA;AACA,yDAAyD,sCAAsC;AAC/F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;;;;;;AC5HA,aAAa,mBAAO,CAAC,EAAsB;AAC3C,gBAAgB,mBAAO,CAAC,GAAwB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;;AAE3C;AACA;AACA;AACA,gBAAgB,mBAAO,CAAC,GAAY;AACpC;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,sBAAsB,mBAAO,CAAC,EAAkB;AAChD;AACA,mBAAmB,mBAAO,CAAC,GAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,eAAe,mBAAO,CAAC,GAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9BA;AACA;AACA,wBAAwB,mBAAO,CAAC,GAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;ACvDA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY,uCAAuC;AACjE,KAAK;AACL,MAAM,6DAA6D;AACnE,MAAM,6DAA6D;AACnE,MAAM,wDAAwD;AAC9D,MAAM,2DAA2D;AACjE,MAAM,+DAA+D;AACrE,MAAM,2DAA2D;AACjE,MAAM,8DAA8D;AACpE,MAAM,8DAA8D;AACpE,MAAM,iEAAiE;AACvE,MAAM,kEAAkE;AACxE,MAAM,wEAAwE;AAC9E,MAAM,4DAA4D;AAClE,MAAM,4DAA4D;AAClE;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY,qDAAqD;AAC/E,KAAK;AACL;AACA,MAAM,8DAA8D;AACpE;AACA;AACA;;;;;;;;AClCA;AACA;AACA,oBAAoB,QAAQ;AAC5B,kDAAkD,YAAY;AAC9D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;;;;;;;ACbA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,YAAY;AACzD;;AAEA,uBAAuB,YAAY;AACnC,yBAAyB;AACzB,6CAA6C,gBAAgB;AAC7D;;AAEA,uBAAuB,YAAY;AACnC,yBAAyB;AACzB,6CAA6C,gBAAgB;AAC7D;;AAEA,2BAA2B,YAAY;AACvC,yBAAyB;AACzB,uDAAuD,gBAAgB;AACvE;;AAEA,kBAAkB,QAAQ;AAC1B,8CAA8C,QAAQ;AACtD;;AAEA,qBAAqB,QAAQ;AAC7B,iDAAiD,QAAQ;AACzD;;AAEA,yBAAyB,QAAQ;AACjC,+CAA+C,QAAQ;AACvD;;AAEA,qBAAqB,qBAAqB;AAC1C,iDAAiD,qBAAqB;AACtE;;AAEA,wBAAwB,qBAAqB;AAC7C,oDAAoD,qBAAqB;AACzE;;AAEA,wBAAwB,aAAa;AACrC,oDAAoD,aAAa;AACjE;;AAEA;AACA;AACA;;AAEA,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,cAAc;AACpC,sCAAsC,cAAc;AACpD;AACA;;AAEA,sBAAsB,qBAAqB;AAC3C,sCAAsC,cAAc;AACpD;AACA;;AAEA,mBAAmB,cAAc;AACjC,2BAA2B,QAAQ,GAAG,0BAA0B;AAChE;AACA;;AAEA;AACA;;;;;;;;ACvIA,aAAa,mBAAO,CAAC,GAAmB;AACxC,gBAAgB,mBAAO,CAAC,GAAqB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCTA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://egg-born-module-a-user/./backend/src/bean/stats.user.js","webpack://egg-born-module-a-user/./backend/src/bean/stats.userAlert.js","webpack://egg-born-module-a-user/./backend/src/beans.js","webpack://egg-born-module-a-user/./backend/src/config/config.js","webpack://egg-born-module-a-user/./backend/src/config/errors.js","webpack://egg-born-module-a-user/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-a-user/./backend/src/config/locales.js","webpack://egg-born-module-a-user/./backend/src/config/static/layout/layoutAppMineBase.js","webpack://egg-born-module-a-user/./backend/src/config/static/layouts.js","webpack://egg-born-module-a-user/./backend/src/controller/public.js","webpack://egg-born-module-a-user/./backend/src/controller/user.js","webpack://egg-born-module-a-user/./backend/src/controllers.js","webpack://egg-born-module-a-user/./backend/src/main.js","webpack://egg-born-module-a-user/./backend/src/meta.js","webpack://egg-born-module-a-user/./backend/src/models.js","webpack://egg-born-module-a-user/./backend/src/routes.js","webpack://egg-born-module-a-user/./backend/src/service/public.js","webpack://egg-born-module-a-user/./backend/src/service/user.js","webpack://egg-born-module-a-user/./backend/src/services.js","webpack://egg-born-module-a-user/webpack/bootstrap","webpack://egg-born-module-a-user/webpack/before-startup","webpack://egg-born-module-a-user/webpack/startup","webpack://egg-born-module-a-user/webpack/after-startup"],"sourcesContent":["module.exports = ctx => {\n  class Stats {\n    async execute(context) {\n      const { provider, user } = context;\n      const dependencies = provider.dependencies;\n      const res = { red: 0, orange: 0 };\n      for (const dep of dependencies) {\n        const [module, fullName] = dep.split(':');\n        const value = await ctx.bean.stats._get({\n          module,\n          fullName,\n          user,\n        });\n        // value maybe undefined\n        if (!value) continue;\n        if (dep === 'a-user:userRed') {\n          res.red += value;\n        } else if (dep === 'a-user:userOrange') {\n          res.orange += value;\n        } else {\n          // e.g. dep === 'a-message:message' || dep === 'a-base:starsLabels'\n          if (value.red !== undefined) {\n            res.red += value.red;\n          }\n          if (value.orange !== undefined) {\n            res.orange += value.orange;\n          }\n          // ignore gray\n        }\n      }\n      return res;\n    }\n  }\n\n  return Stats;\n};\n","module.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class Stats {\n    async execute(context) {\n      const { user } = context;\n      // user stats\n      const statsUser = await ctx.bean.stats._get({\n        module: moduleInfo.relativeName,\n        fullName: 'user',\n        user,\n      });\n      // message stats\n      const statsMessage = await ctx.bean.stats._get({\n        module: 'a-message',\n        fullName: 'message',\n        user,\n      });\n      // minus\n      if (statsMessage) {\n        if (statsMessage.red !== undefined) {\n          statsUser.red -= statsMessage.red;\n        }\n        if (statsMessage.orange !== undefined) {\n          statsUser.orange -= statsMessage.orange;\n        }\n      }\n      // ok\n      return statsUser;\n    }\n  }\n\n  return Stats;\n};\n","const statsUser = require('./bean/stats.user.js');\nconst statsUserAlert = require('./bean/stats.userAlert.js');\n\nmodule.exports = app => {\n  const beans = {\n    // stats\n    'stats.user': {\n      mode: 'ctx',\n      bean: statsUser,\n    },\n    'stats.userAlert': {\n      mode: 'ctx',\n      bean: statsUserAlert,\n    },\n  };\n  return beans;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {};\n","module.exports = {\n  User: '用户',\n  Comments: '评论',\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = app => {\n  // const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const content = {\n    info: {\n      layout: {\n        viewSize: {\n          small: 'list',\n          medium: 'list',\n          large: 'list',\n        },\n      },\n    },\n    layouts: {\n      base: {\n        blocks: {\n          title: {\n            component: {\n              module: 'a-baselayout',\n              name: 'baseLayoutBlockListTitle',\n            },\n          },\n        },\n      },\n      list: {\n        providerOptions: {\n          providerName: 'all',\n          autoInit: false,\n        },\n        subnavbar: false,\n        blocks: {\n          items: {\n            component: {\n              module: 'a-user',\n              name: 'appMineLayoutBlockListItems',\n            },\n          },\n          mineHeader: {\n            component: {\n              module: 'a-user',\n              name: 'appMineLayoutBlockListMineHeader',\n            },\n          },\n          mineSubHeader: {\n            component: {\n              module: 'a-user',\n              name: 'appMineLayoutBlockListMineSubHeader',\n            },\n          },\n          mineBody: {\n            component: {\n              module: 'a-user',\n              name: 'appMineLayoutBlockListMineBody',\n            },\n          },\n          mineFooter: {\n            component: {\n              module: 'a-user',\n              name: 'appMineLayoutBlockListMineFooter',\n            },\n          },\n        },\n      },\n    },\n  };\n  const layout = {\n    atomName: 'Base',\n    atomStaticKey: 'layoutAppMineBase',\n    atomRevision: 3,\n    description: '',\n    layoutTypeCode: 14,\n    content: JSON.stringify(content),\n    resourceRoles: 'root',\n  };\n  return layout;\n};\n","const layoutAppMineBase = require('./layout/layoutAppMineBase.js');\n// const layoutAppMineDefault = require('./layout/layoutAppMineDefault.js');\n\nmodule.exports = app => {\n  const layouts = [\n    layoutAppMineBase(app),\n    // layoutAppMineDefault(app),\n  ];\n  return layouts;\n};\n","module.exports = app => {\n  class PublicController extends app.Controller {\n    async profile() {\n      const res = await this.service.public.profile({\n        userId: this.ctx.request.body.userId,\n      });\n      this.ctx.success(res);\n    }\n  }\n  return PublicController;\n};\n","module.exports = app => {\n  class UserController extends app.Controller {\n    async save() {\n      const res = await this.service.user.save({\n        data: this.ctx.request.body.data,\n        user: this.ctx.state.user.agent,\n      });\n      this.ctx.success(res);\n    }\n\n    async saveAvatar() {\n      const res = await this.service.user.saveAvatar({\n        data: this.ctx.request.body.data,\n        user: this.ctx.state.user.agent,\n      });\n      this.ctx.success(res);\n    }\n\n    async saveLocale() {\n      // check demo\n      this.ctx.bean.util.checkDemo();\n      const res = await this.service.user.saveLocale({\n        data: this.ctx.request.body.data,\n        user: this.ctx.state.user.agent,\n      });\n      this.ctx.success(res);\n    }\n\n    async changeUserName() {\n      // check demo\n      this.ctx.bean.util.checkDemo();\n      const res = await this.service.user.changeUserName({\n        data: this.ctx.request.body.data,\n        user: this.ctx.state.user.agent,\n      });\n      this.ctx.success(res);\n    }\n\n    async agent() {\n      const res = await this.service.user.agent({ userId: this.ctx.state.user.agent.id });\n      this.ctx.success(res);\n    }\n\n    async agentsBy() {\n      const res = await this.service.user.agentsBy({ userId: this.ctx.state.user.agent.id });\n      this.ctx.success(res);\n    }\n\n    async userByMobile() {\n      const res = await this.service.user.userByMobile({ mobile: this.ctx.request.body.mobile });\n      this.ctx.success(res);\n    }\n\n    async addAgent() {\n      // check demo\n      this.ctx.bean.util.checkDemo();\n      const res = await this.service.user.addAgent({\n        userIdAgent: this.ctx.request.body.userIdAgent,\n        userId: this.ctx.state.user.agent.id,\n      });\n      this.ctx.success(res);\n    }\n\n    async removeAgent() {\n      // check demo\n      this.ctx.bean.util.checkDemo();\n      const res = await this.service.user.removeAgent({\n        userIdAgent: this.ctx.request.body.userIdAgent,\n        userId: this.ctx.state.user.agent.id,\n      });\n      this.ctx.success(res);\n    }\n\n    async switchAgent() {\n      // check demo\n      this.ctx.bean.util.checkDemo();\n      const res = await this.service.user.switchAgent({\n        userIdAgent: this.ctx.request.body.userIdAgent,\n      });\n      this.ctx.success(res);\n    }\n\n    async switchOffAgent() {\n      // check demo\n      this.ctx.bean.util.checkDemo();\n      const res = await this.service.user.switchOffAgent();\n      this.ctx.success(res);\n    }\n\n    async authentications() {\n      const res = await this.service.user.authentications({\n        user: this.ctx.state.user.agent,\n      });\n      this.ctx.success(res);\n    }\n\n    async authenticationDisable() {\n      // check demo\n      this.ctx.bean.util.checkDemo();\n      const res = await this.service.user.authenticationDisable({\n        authId: this.ctx.request.body.authId,\n        user: this.ctx.state.user.agent,\n      });\n      this.ctx.success(res);\n    }\n\n    async themeLoad() {\n      const res = await this.service.user.themeLoad({\n        appKey: this.ctx.request.body.appKey,\n        user: this.ctx.state.user.agent,\n      });\n      this.ctx.success(res);\n    }\n\n    async themeSave() {\n      await this.service.user.themeSave({\n        appKey: this.ctx.request.body.appKey,\n        theme: this.ctx.request.body.theme,\n        user: this.ctx.state.user.agent,\n      });\n      this.ctx.success();\n    }\n  }\n  return UserController;\n};\n","const user = require('./controller/user.js');\nconst public2 = require('./controller/public.js');\n\nmodule.exports = app => {\n  const controllers = {\n    user,\n    public: public2,\n  };\n  return controllers;\n};\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\n\n// eslint-disable-next-line\nmodule.exports = app => {\n  // beans\n  const beans = require('./beans.js')(app);\n  // routes\n  const routes = require('./routes.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    beans,\n    routes,\n    controllers,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    meta,\n  };\n};\n","module.exports = app => {\n  // static\n  const staticLayouts = require('./config/static/layouts.js')(app);\n  // meta\n  const meta = {\n    base: {\n      statics: {\n        'a-baselayout.layout': {\n          items: staticLayouts,\n        },\n      },\n    },\n    stats: {\n      providers: {\n        userRed: {\n          user: true,\n          bean: {\n            module: 'a-stats',\n            name: 'deps',\n          },\n          dependencies: ['a-flowtask:taskClaimings', 'a-flowtask:taskHandlings'],\n        },\n        userOrange: {\n          user: true,\n          bean: {\n            module: 'a-stats',\n            name: 'deps',\n          },\n          dependencies: [\n            'a-base:drafts',\n            // 'a-base:stars',\n            'a-flow:flowInitiateds',\n          ],\n        },\n        user: {\n          user: true,\n          bean: {\n            module: 'a-user',\n            name: 'user',\n          },\n          // dependencies: ['a-user:userRed', 'a-user:userOrange', 'a-message:message', 'a-base:starsLabels'],\n          dependencies: ['a-user:userRed', 'a-user:userOrange'],\n        },\n        userAlert: {\n          user: true,\n          bean: {\n            module: 'a-user',\n            name: 'userAlert',\n          },\n          dependencies: ['a-user:user'],\n        },\n      },\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  const models = {};\n  return models;\n};\n","module.exports = app => {\n  const routes = [\n    // user\n    {\n      method: 'post',\n      path: 'user/save',\n      controller: 'user',\n      middlewares: 'validate',\n      meta: { validate: { module: 'a-base', validator: 'user' } },\n    },\n    { method: 'post', path: 'user/saveAvatar', controller: 'user' },\n    { method: 'post', path: 'user/saveLocale', controller: 'user' },\n    { method: 'post', path: 'user/agent', controller: 'user' },\n    { method: 'post', path: 'user/agentsBy', controller: 'user' },\n    { method: 'post', path: 'user/userByMobile', controller: 'user' },\n    { method: 'post', path: 'user/addAgent', controller: 'user' },\n    { method: 'post', path: 'user/removeAgent', controller: 'user' },\n    { method: 'post', path: 'user/switchAgent', controller: 'user' },\n    { method: 'post', path: 'user/switchOffAgent', controller: 'user' },\n    { method: 'post', path: 'user/authentications', controller: 'user' },\n    { method: 'post', path: 'user/authenticationDisable', controller: 'user' },\n    { method: 'post', path: 'user/themeLoad', controller: 'user' },\n    { method: 'post', path: 'user/themeSave', controller: 'user' },\n    {\n      method: 'post',\n      path: 'user/changeUserName',\n      controller: 'user',\n      middlewares: 'validate',\n      meta: { validate: { module: 'a-base', validator: 'userChangeUserName' } },\n    },\n    // public\n    { method: 'post', path: 'public/profile', controller: 'public' },\n  ];\n  return routes;\n};\n","module.exports = app => {\n  class Public2 extends app.Service {\n    async profile({ userId }) {\n      const item = await this.ctx.bean.user.get({ id: userId });\n      const user = {\n        userName: item.userName,\n        avatar: item.avatar,\n        motto: item.motto,\n      };\n      return { user };\n    }\n  }\n  return Public2;\n};\n","const __appKeyDefault = 'a-app:appDefault';\n\nmodule.exports = app => {\n  class User extends app.Service {\n    async save({ data, user }) {\n      // id\n      data.id = user.id;\n      // readOnly\n      delete data.userName;\n      delete data.email;\n      delete data.mobile;\n      delete data.locale;\n      // save\n      return await this.ctx.bean.user.save({ user: data });\n    }\n\n    async saveAvatar({ data, user }) {\n      const userData = { id: user.id, avatar: data.avatar };\n      return await this.ctx.bean.user.save({ user: userData });\n    }\n\n    async saveLocale({ data, user }) {\n      const userData = { id: user.id, locale: data.locale };\n      return await this.ctx.bean.user.save({ user: userData });\n    }\n\n    async changeUserName({ data, user }) {\n      const userData = { id: user.id, userName: data.userName };\n      return await this.ctx.bean.user.changeUserName({ user: userData });\n    }\n\n    async agent({ userId }) {\n      return await this.ctx.bean.user.agent({ userId });\n    }\n\n    async agentsBy({ userId }) {\n      return await this.ctx.bean.user.agentsBy({ userId });\n    }\n\n    async userByMobile({ mobile }) {\n      return await this.ctx.bean.user.exists({ mobile });\n    }\n\n    async addAgent({ userIdAgent, userId }) {\n      return await this.ctx.bean.user.addAgent({ userIdAgent, userId });\n    }\n\n    async removeAgent({ userIdAgent, userId }) {\n      return await this.ctx.bean.user.removeAgent({ userIdAgent, userId });\n    }\n\n    async switchAgent({ userIdAgent }) {\n      return await this.ctx.bean.user.switchAgent({ userIdAgent });\n    }\n\n    async switchOffAgent() {\n      return await this.ctx.bean.user.switchOffAgent();\n    }\n\n    async authentications({ user }) {\n      // 1. get auth providers list from a-login\n      let listLogin = this.ctx.bean.util.extend([], this.ctx.bean.authProviderCache.getAuthProvidersConfigForLogin());\n      if (listLogin.length === 0) return [];\n      // 2. list aAuth\n      const sql = `\n        select a.id,a.providerId,a.providerScene,b.module,b.providerName from aAuth a\n          inner join aAuthProvider b on a.providerId=b.id\n          where a.iid=? and a.userId=?\n      `;\n      const list = await this.ctx.model.query(sql, [this.ctx.instance.id, user.id]);\n      // 3. map\n      for (const auth of list) {\n        const authId = auth.id;\n        const provider = listLogin.find(item => item.module === auth.module && item.providerName === auth.providerName);\n        // maybe disabled\n        if (!provider) continue;\n        // meta\n        if (!provider.meta.scene) {\n          provider.scenes.default.__authId = authId;\n        } else {\n          const scene = provider.scenes[auth.providerScene];\n          // // maybe disabled\n          if (!scene) continue;\n          scene.__authId = authId;\n        }\n      }\n      // 4. filter inner || disableAssociate:true and no __authId\n      listLogin = listLogin.filter(item => {\n        for (const sceneName of Object.keys(item.scenes)) {\n          const scene = item.scenes[sceneName];\n          const metaScene = this._getMetaScene(item, sceneName);\n          if (metaScene.inner || (metaScene.disableAssociate && !scene.__authId)) {\n            delete item.scenes[sceneName];\n          }\n        }\n        return Object.keys(item.scenes).length > 0;\n      });\n      // ok\n      return listLogin;\n    }\n\n    _getMetaScene(item, sceneName) {\n      const meta = item.meta;\n      if (meta.scene) {\n        const scene = item.metaScenes && item.metaScenes[sceneName];\n        return (scene && scene.meta) || meta;\n      }\n      return meta;\n    }\n\n    async authenticationDisable({ authId, user }) {\n      // must use userId in where\n      await this.ctx.model.query('delete from aAuth where iid=? and id=? and userId=?', [\n        this.ctx.instance.id,\n        authId,\n        user.id,\n      ]);\n    }\n\n    async themeLoad({ appKey, user }) {\n      const key = this._getThemeKey({ appKey, user });\n      return await this.ctx.bean.status.get(key);\n    }\n\n    async themeSave({ appKey, theme, user }) {\n      const key = this._getThemeKey({ appKey, user });\n      await this.ctx.bean.status.set(key, theme);\n    }\n\n    _getThemeKey({ appKey, user }) {\n      return `user-theme:${user.id}:${appKey || __appKeyDefault}`;\n    }\n  }\n\n  return User;\n};\n","const user = require('./service/user.js');\nconst public2 = require('./service/public.js');\n\nmodule.exports = app => {\n  const services = {\n    user,\n    public: public2,\n  };\n  return services;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(421);\n",""],"names":[],"sourceRoot":""}