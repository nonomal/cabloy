{"version":3,"file":"backend.js","mappings":";;;;;;AAAA,iBAAiB,mBAAO,CAAC,GAAU;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,8CAA8C;AAC/F;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,kCAAkC,oBAAoB;AACtD;AACA;AACA,mEAAmE,UAAU;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW,YAAY,UAAU,GAAG,0BAA0B,KAAK,WAAW,GAAG,yBAAyB;AAC/I,kCAAkC,WAAW,YAAY,UAAU,GAAG,gBAAgB,KAAK,WAAW,GAAG;AACzG;AACA,cAAc;AACd;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACvEA,uBAAuB,mBAAO,CAAC,GAA2B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;ACXA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,oBAAoB;AACpB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;AC9HA;AACA;;;;;;;;ACDA;;;;;;;;ACAA;AACA,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;ACFA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;ACHA,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;;AAE3C;AACA;AACA,gBAAgB,mBAAO,CAAC,GAAY;AACpC;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,sBAAsB,mBAAO,CAAC,EAAkB;AAChD;AACA,mBAAmB,mBAAO,CAAC,GAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,eAAe,mBAAO,CAAC,GAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7BA;AACA,kBAAkB,mBAAO,CAAC,GAAgC;AAC1D;AACA;AACA,eAAe;AACf,KAAK;AACL;AACA,oBAAoB;AACpB,kBAAkB;AAClB,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;;;;;;;;ACbA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;ACHA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://egg-born-module-a-index/./backend/src/bean/version.manager.js","webpack://egg-born-module-a-index/./backend/src/beans.js","webpack://egg-born-module-a-index/./backend/src/config/config.js","webpack://egg-born-module-a-index/./backend/src/config/errors.js","webpack://egg-born-module-a-index/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-a-index/./backend/src/config/locales.js","webpack://egg-born-module-a-index/./backend/src/config/validation/schemas.js","webpack://egg-born-module-a-index/./backend/src/controllers.js","webpack://egg-born-module-a-index/./backend/src/main.js","webpack://egg-born-module-a-index/./backend/src/meta.js","webpack://egg-born-module-a-index/./backend/src/models.js","webpack://egg-born-module-a-index/./backend/src/routes.js","webpack://egg-born-module-a-index/./backend/src/services.js","webpack://egg-born-module-a-index/external commonjs2 \"require3\"","webpack://egg-born-module-a-index/webpack/bootstrap","webpack://egg-born-module-a-index/webpack/before-startup","webpack://egg-born-module-a-index/webpack/startup","webpack://egg-born-module-a-index/webpack/after-startup"],"sourcesContent":["const require3 = require('require3');\nconst chalk = require3('chalk');\n\nmodule.exports = app => {\n  class Version extends app.meta.BeanBase {\n    async update(options) {\n      // check indexes\n      if (this.ctx.config.indexesCheck) {\n        // combine module's indexes\n        const moduleIndexes = {};\n        for (const relativeName in this.app.meta.modules) {\n          const module = this.app.meta.modules[relativeName];\n          if (module.main.meta && module.main.meta.index && module.main.meta.index.indexes) {\n            moduleIndexes[relativeName] = module.main.meta.index.indexes;\n          }\n        }\n        // combine indexes all\n        const indexes = this.ctx.bean.util.extend(\n          {},\n          this.ctx.config.indexes,\n          moduleIndexes,\n          this.ctx.config.indexesExtend\n        );\n        // create indexes\n        for (const moduleRelativeName in indexes) {\n          if (this.app.meta.modules[moduleRelativeName]) {\n            const moduleIndexes = indexes[moduleRelativeName];\n            for (const tableName in moduleIndexes) {\n              await this._createIndexesOnTable({ tableName, indexes: moduleIndexes[tableName] });\n            }\n          }\n        }\n      }\n    }\n\n    async init(options) {}\n\n    async test() {}\n\n    async _createIndexesOnTable({ tableName, indexes }) {\n      try {\n        const _indexArray = indexes.split(',');\n        const list = await this.ctx.model.query(`show index from ${tableName}`);\n        const map = {};\n        for (const item of list) {\n          map[item.Column_name] = item.Index_type;\n        }\n        for (const _index of _indexArray) {\n          const _arr = _index.split(':');\n          const fieldNames = _arr[0];\n          const fieldNameArray = fieldNames.split('+');\n          const fieldNameFirst = fieldNameArray[0];\n          const indexType = _arr[1] || '';\n          if (!map[fieldNameFirst]) {\n            // too long\n            // const sql = `create ${indexType} index idx_${tableName}_${fieldNameArray.join('_')} ON ${tableName} (${fieldNameArray.join(',')})`;\n            const sql = `create ${indexType} index idx_${tableName}_${fieldNameFirst} ON ${tableName} (${fieldNameArray.join(\n              ','\n            )})`;\n            await this.ctx.model.query(sql);\n          }\n        }\n      } catch (e) {\n        // just log the error message\n        console.log(chalk.red(e.message));\n        if (e.sql) console.log(chalk.red(e.sql));\n      }\n    }\n  }\n\n  return Version;\n};\n","const versionManager = require('./bean/version.manager.js');\n\nmodule.exports = app => {\n  const beans = {\n    // version\n    'version.manager': {\n      mode: 'app',\n      bean: versionManager,\n    },\n  };\n  return beans;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  // indexes\n  config.indexes = {\n    'a-version': {\n      aVersion: 'createdAt,updatedAt,module,version',\n      aVersionInit: 'createdAt,updatedAt,subdomain+module,version',\n    },\n    'a-authsimple': {\n      aAuthSimple: 'createdAt,updatedAt,userId',\n    },\n    'a-base': {\n      aAtom:\n        'createdAt,updatedAt,itemId,atomStage,atomFlowId,atomClassId,atomName,userIdCreated,userIdUpdated,atomStaticKey,atomLanguage,atomCategoryId',\n      aAtomAction: 'createdAt,updatedAt,atomClassId+code,name',\n      aAtomClass: 'createdAt,updatedAt,module+atomClassName',\n      aAtomLabel: 'createdAt,updatedAt,userId,atomId',\n      aAtomLabelRef: 'createdAt,updatedAt,userId+labelId,atomId',\n      aAtomStar: 'createdAt,updatedAt,userId,atomId',\n      aAuth: 'createdAt,updatedAt,userId,providerId+profileId',\n      aAuthProvider: 'createdAt,updatedAt,module+providerName',\n      aCategory: 'createdAt,updatedAt,atomClassId,categoryName,categorySorting,categoryIdParent',\n      aComment: 'createdAt,updatedAt,atomId,userId,sorting',\n      aCommentHeart: 'createdAt,updatedAt,userId,atomId,commentId',\n      aLabel: 'createdAt,updatedAt,userId',\n      aResource: 'createdAt,updatedAt,atomId,resourceSorting,resourceType',\n      aResourceLocale: 'createdAt,updatedAt,atomId,locale',\n      aResourceRole: 'createdAt,updatedAt,atomId,roleId',\n      aRole: 'createdAt,updatedAt,roleName,sorting,roleIdParent',\n      aRoleExpand: 'createdAt,updatedAt,roleId,roleIdBase',\n      aRoleInc: 'createdAt,updatedAt,roleId,roleIdInc',\n      aRoleIncRef: 'createdAt,updatedAt,roleId,roleIdInc,roleIdSrc',\n      aRoleRef: 'createdAt,updatedAt,roleId,roleIdParent',\n      aRoleRight: 'createdAt,updatedAt,roleId,atomClassId+action',\n      aRoleRightRef: 'createdAt,updatedAt,roleRightId,roleId,atomClassId+action,roleIdScope',\n      aTag: 'createdAt,updatedAt,atomClassId,tagName',\n      aTagRef: 'createdAt,updatedAt,atomId,tagId',\n      aUser: 'createdAt,updatedAt,userName,email,mobile',\n      aUserAgent: 'createdAt,updatedAt,userId,userIdAgent',\n      aUserRole: 'createdAt,updatedAt,userId,roleId',\n    },\n    'a-cache': {\n      aCache: 'createdAt,updatedAt,module+name',\n    },\n    'a-cms': {\n      aCmsArticle: 'createdAt,updatedAt,atomId,sticky,slug,sorting',\n      aCmsContent: 'createdAt,updatedAt,atomId,html:fulltext',\n    },\n    'a-dashboard': {\n      aDashboard: 'createdAt,updatedAt,atomId',\n      aDashboardContent: 'createdAt,updatedAt,atomId,itemId',\n      aDashboardUser: 'createdAt,updatedAt,userId,dashboardAtomId',\n    },\n    'a-detail': {\n      aDetail: 'createdAt,updatedAt,atomId,detailItemId,detailClassId,detailStaticKey',\n      aDetailClass: 'createdAt,updatedAt,module+detailClassName',\n    },\n    'a-dict': {\n      aDict: 'createdAt,updatedAt,atomId',\n    },\n    'a-dingtalk': {\n      aDingtalkDepartment: 'createdAt,updatedAt,roleId,departmentId,departmentParentId',\n      aDingtalkMember: 'createdAt,updatedAt,userId,memberId',\n    },\n    'a-file': {\n      aFile: 'createdAt,updatedAt,userId,downloadId,atomId',\n    },\n    'a-flow': {\n      aFlow: 'createdAt,updatedAt,flowDefId,flowStatus,flowUserId',\n      aFlowDef: 'createdAt,updatedAt,atomId',\n      aFlowDefContent: 'createdAt,updatedAt,atomId,itemId',\n      aFlowHistory: 'createdAt,updatedAt,flowId,flowDefId,flowStatus,flowUserId',\n      aFlowNode: 'createdAt,updatedAt,flowId,flowNodeIdPrev',\n      aFlowNodeHistory: 'createdAt,updatedAt,flowId,flowNodeId,flowNodeIdPrev',\n    },\n    'a-flowtask': {\n      aFlowNodeStartEventAtomCondition: 'createdAt,updatedAt,flowDefId,atomClassId',\n      aFlowTask: 'createdAt,updatedAt,flowId,flowNodeId,flowTaskStatus,userIdAssignee',\n      aFlowTaskHistory: 'createdAt,updatedAt,flowId,flowTaskId,flowNodeId,flowTaskStatus,userIdAssignee',\n    },\n    'a-instance': {\n      aInstance: 'createdAt,updatedAt,name',\n    },\n    'a-mail': {\n      aMail: 'createdAt,updatedAt,status',\n    },\n    'a-progress': {},\n    'a-sequence': {\n      aSequence: 'createdAt,updatedAt,module+name',\n    },\n    'a-settings': {\n      aSettings: 'createdAt,updatedAt,module+scene+userId',\n      aSettingsRef: 'createdAt,updatedAt,module+scene+userId+name',\n    },\n    'a-share': {\n      aShare: 'createdAt,updatedAt,uuid,atomId,userId,host',\n      aShareRecordPV: 'createdAt,updatedAt,shareId,userId',\n      aShareRecordUV: 'createdAt,updatedAt,atomId,userIdSource,userIdTarget',\n    },\n    'a-socketio': {\n      aSocketIOMessage: 'createdAt,updatedAt,messageClassId,messageFilter,sessionId',\n      aSocketIOMessageClass: 'createdAt,updatedAt,module+messageClassName',\n      aSocketIOMessageSync: 'createdAt,updatedAt,messageId,userId,messageRead',\n    },\n    'a-stats': {\n      aStats: 'createdAt,updatedAt,userId,module+name',\n    },\n    'a-status': {\n      aStatus: 'createdAt,updatedAt,module+name',\n    },\n    'a-wechat': {\n      aWechatUser: 'createdAt,updatedAt,userId,openid,unionid',\n    },\n    'a-wxwork': {\n      aWxworkDepartment: 'createdAt,updatedAt,roleId,departmentId,departmentParentId',\n      aWxworkMember: 'createdAt,updatedAt,userId,memberId',\n    },\n  };\n  // indexes extend\n  config.indexesExtend = null;\n  // indexesCheck\n  config.indexesCheck = true;\n\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {};\n","module.exports = {};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = app => {\n  const schemas = {};\n  return schemas;\n};\n","module.exports = app => {\n  const controllers = {};\n  return controllers;\n};\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\n\nmodule.exports = app => {\n  // beans\n  const beans = require('./beans.js')(app);\n  // routes\n  const routes = require('./routes.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    beans,\n    routes,\n    controllers,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    meta,\n  };\n};\n","module.exports = app => {\n  const schemas = require('./config/validation/schemas.js')(app);\n  const meta = {\n    base: {\n      atoms: {},\n    },\n    validation: {\n      validators: {},\n      keywords: {},\n      schemas: {},\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  const models = {};\n  return models;\n};\n","module.exports = app => {\n  const routes = [];\n  return routes;\n};\n","module.exports = app => {\n  const services = {};\n  return services;\n};\n","module.exports = require(\"require3\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(421);\n",""],"names":[],"sourceRoot":""}