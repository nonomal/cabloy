{"version":3,"file":"backend.js","mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA,oBAAoB,YAAY;AAChC;AACA;AACA,+CAA+C,MAAM;AACrD;AACA;AACA;AACA;AACA;AACA,uDAAuD,UAAU;AACjE;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA,iGAAiG,SAAS;AAC1G;AACA;AACA;;AAEA;AACA,6DAA6D,KAAK;AAClE;;AAEA,0BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;;AAEA;AACA;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;;;;;;AC/DA,uBAAuB,mBAAO,CAAC,GAA2B;AAC1D,kBAAkB,mBAAO,CAAC,GAAsB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;;;;;;;;ACDA;;;;;;;;ACAA;;;;;;;;ACAA;AACA,WAAW,mBAAO,CAAC,GAAmB;AACtC,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;;;;;;ACpBA,cAAc,mBAAO,CAAC,GAAuB;;AAE7C;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;;AAE3C;AACA;AACA,eAAe,mBAAO,CAAC,GAAW;AAClC;AACA,gBAAgB,mBAAO,CAAC,GAAY;AACpC;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,sBAAsB,mBAAO,CAAC,EAAkB;AAChD;AACA,mBAAmB,mBAAO,CAAC,GAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,eAAe,mBAAO,CAAC,GAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChCA;AACA,kBAAkB,mBAAO,CAAC,GAAgC;AAC1D;AACA;AACA,eAAe;AACf,KAAK;AACL;AACA,oBAAoB;AACpB,kBAAkB;AAClB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;ACnBA;AACA;AACA;AACA,mBAAmB,4BAA4B,yBAAyB;AACxE;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA,mBAAmB,oCAAoC,yBAAyB;AAChF;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA,mBAAmB,oCAAoC,yBAAyB;AAChF;AACA;AACA;AACA;;;;;;;;ACPA,cAAc,mBAAO,CAAC,EAAkB;AACxC,sBAAsB,mBAAO,CAAC,GAA0B;AACxD,sBAAsB,mBAAO,CAAC,GAA0B;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B,OAAO;AACP,KAAK;AACL,MAAM,yEAAyE;AAC/E;AACA;AACA;;;;;;;;ACbA;AACA;AACA,qBAAqB,yBAAyB;AAC9C,kDAAkD,yBAAyB;AAC3E;;AAEA,oBAAoB,YAAY;AAChC,iDAAiD,YAAY;AAC7D;AACA;;AAEA;AACA;;;;;;;;ACZA,cAAc,mBAAO,CAAC,GAAoB;;AAE1C;AACA;AACA;AACA;AACA;AACA;;;;;;;UCPA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://egg-born-module-a-share/./backend/src/aops.js","webpack://egg-born-module-a-share/./backend/src/bean/bean.share.js","webpack://egg-born-module-a-share/./backend/src/bean/version.manager.js","webpack://egg-born-module-a-share/./backend/src/beans.js","webpack://egg-born-module-a-share/./backend/src/config/config.js","webpack://egg-born-module-a-share/./backend/src/config/errors.js","webpack://egg-born-module-a-share/./backend/src/config/locale/en-us.js","webpack://egg-born-module-a-share/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-a-share/./backend/src/config/locales.js","webpack://egg-born-module-a-share/./backend/src/config/validation/schemas.js","webpack://egg-born-module-a-share/./backend/src/controller/share.js","webpack://egg-born-module-a-share/./backend/src/controllers.js","webpack://egg-born-module-a-share/./backend/src/main.js","webpack://egg-born-module-a-share/./backend/src/meta.js","webpack://egg-born-module-a-share/./backend/src/model/share.js","webpack://egg-born-module-a-share/./backend/src/model/shareRecordPV.js","webpack://egg-born-module-a-share/./backend/src/model/shareRecordUV.js","webpack://egg-born-module-a-share/./backend/src/models.js","webpack://egg-born-module-a-share/./backend/src/routes.js","webpack://egg-born-module-a-share/./backend/src/service/share.js","webpack://egg-born-module-a-share/./backend/src/services.js","webpack://egg-born-module-a-share/webpack/bootstrap","webpack://egg-born-module-a-share/webpack/before-startup","webpack://egg-born-module-a-share/webpack/startup","webpack://egg-born-module-a-share/webpack/after-startup"],"sourcesContent":["module.exports = app => {\n  const aops = {};\n  return aops;\n};\n","module.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class Share {\n    get modelShare() {\n      return ctx.model.module(moduleInfo.relativeName).share;\n    }\n\n    get modelShareRecordPV() {\n      return ctx.model.module(moduleInfo.relativeName).shareRecordPV;\n    }\n\n    get modelShareRecordUV() {\n      return ctx.model.module(moduleInfo.relativeName).shareRecordUV;\n    }\n\n    async generate({ host, atomId, url, user }) {\n      const userId = user.id;\n      // get\n      let item = await this.modelShare.get({\n        host,\n        atomId,\n        url,\n        userId,\n      });\n      // insert\n      if (!item) {\n        item = {\n          uuid: ctx.bean.util.uuidv4(),\n          atomId,\n          userId,\n          host,\n          url,\n        };\n        const res = await this.modelShare.insert(item);\n        item.id = res.insertId;\n      }\n      // link\n      const link = this._combine_shareLink(item.uuid);\n      // ok\n      return { link, uuid: item.uuid };\n    }\n\n    async shareGo({ uuid, user }) {\n      const userId = user.id;\n      // get share\n      const item = await this.modelShare.get({ uuid });\n      if (!item) ctx.throw(404);\n      // anonymous\n      if (user.anonymous) {\n        // redirect to login\n        const shareLink = this._combine_shareLink(uuid);\n        const url = ctx.bean.base.getAbsoluteUrl(`/#!${shareLink}`);\n        ctx.redirect(url);\n        return;\n      }\n      // not self\n      if (item.userId !== userId) {\n        await this._share_record({ item, user });\n      }\n      // redirect to original url\n      const url = item.url.indexOf('http') === 0 ? item.url : ctx.bean.base.getAbsoluteUrl(`/#!${item.url}`);\n      // redirect\n      ctx.redirect(url);\n    }\n\n    _combine_shareLink(uuid) {\n      return ctx.bean.base.getAbsoluteUrl(`/api/a/share/go/${uuid}`);\n    }\n\n    async _share_record({ item, user }) {\n      const userId = user.id;\n      // aShareRecordPV\n      await ctx.bean.event.invoke({\n        module: moduleInfo.relativeName,\n        name: 'shareRecordPV',\n        data: { share: item, user },\n        next: async (context, next) => {\n          // record\n          const res = await this.modelShareRecordPV.insert({\n            shareId: item.id,\n            userId,\n          });\n          context.result = {\n            recordId: res.insertId,\n          };\n          // next\n          await next();\n        },\n      });\n      // aShareRecordUV\n      const uvData = {\n        atomId: item.atomId,\n        userIdSource: item.userId,\n        userIdTarget: userId,\n      };\n      const uv = await this.modelShareRecordUV.get(uvData);\n      if (!uv) {\n        await ctx.bean.event.invoke({\n          module: moduleInfo.relativeName,\n          name: 'shareRecordUV',\n          data: { share: item, user },\n          next: async (context, next) => {\n            // record\n            const res = await this.modelShareRecordUV.insert(uvData);\n            context.result = {\n              recordId: res.insertId,\n            };\n            // next\n            await next();\n          },\n        });\n      }\n    }\n  }\n\n  return Share;\n};\n","module.exports = app => {\n  class Version extends app.meta.BeanBase {\n    async update(options) {\n      if (options.version === 1) {\n        let sql;\n\n        // create table: aShare\n        sql = `\n          CREATE TABLE aShare (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            uuid varchar(50) DEFAULT NULL,\n            atomId int(11) DEFAULT '0',\n            userId int(11) DEFAULT '0',\n            host varchar(255) DEFAULT NULL,\n            url varchar(255) DEFAULT NULL,\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.model.query(sql);\n\n        // create table: aShareRecordPV\n        sql = `\n          CREATE TABLE aShareRecordPV (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            shareId int(11) DEFAULT '0',\n            userId int(11) DEFAULT '0',\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.model.query(sql);\n\n        // create table: aShareRecordUV\n        sql = `\n          CREATE TABLE aShareRecordUV (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            atomId int(11) DEFAULT '0',\n            userIdSource int(11) DEFAULT '0',\n            userIdTarget int(11) DEFAULT '0',\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.model.query(sql);\n      }\n    }\n\n    async init(options) {}\n\n    async test() {}\n  }\n\n  return Version;\n};\n","const versionManager = require('./bean/version.manager.js');\nconst beanShare = require('./bean/bean.share.js');\n\nmodule.exports = app => {\n  const beans = {\n    // version\n    'version.manager': {\n      mode: 'app',\n      bean: versionManager,\n    },\n    // global\n    share: {\n      mode: 'ctx',\n      bean: beanShare,\n      global: true,\n    },\n  };\n  return beans;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {};\n","module.exports = {};\n","module.exports = {};\n","module.exports = {\n  'en-us': require('./locale/en-us.js'),\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = app => {\n  const schemas = {};\n  return schemas;\n};\n","module.exports = app => {\n  class ShareController extends app.Controller {\n    async generate() {\n      const res = await this.service.share.generate({\n        host: this.ctx.request.body.host,\n        atomId: this.ctx.request.body.atomId,\n        url: this.ctx.request.body.url,\n        user: this.ctx.state.user.op,\n      });\n      this.ctx.success(res);\n    }\n\n    async shareGo() {\n      await this.service.share.shareGo({\n        uuid: this.ctx.params.uuid,\n        user: this.ctx.state.user.op,\n      });\n    }\n  }\n  return ShareController;\n};\n","const share = require('./controller/share.js');\n\nmodule.exports = app => {\n  const controllers = {\n    share,\n  };\n  return controllers;\n};\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\n\nmodule.exports = app => {\n  // aops\n  const aops = require('./aops.js')(app);\n  // beans\n  const beans = require('./beans.js')(app);\n  // routes\n  const routes = require('./routes.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    aops,\n    beans,\n    routes,\n    controllers,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    meta,\n  };\n};\n","module.exports = app => {\n  const schemas = require('./config/validation/schemas.js')(app);\n  const meta = {\n    base: {\n      atoms: {},\n    },\n    validation: {\n      validators: {},\n      keywords: {},\n      schemas,\n    },\n    event: {\n      declarations: {\n        shareRecordPV: 'Share Record PV',\n        shareRecordUV: 'Share Record UV',\n      },\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  class Share extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'aShare', options: { disableDeleted: false } });\n    }\n  }\n  return Share;\n};\n","module.exports = app => {\n  class ShareRecordPV extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'aShareRecordPV', options: { disableDeleted: false } });\n    }\n  }\n  return ShareRecordPV;\n};\n","module.exports = app => {\n  class ShareRecordUV extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'aShareRecordUV', options: { disableDeleted: false } });\n    }\n  }\n  return ShareRecordUV;\n};\n","const share = require('./model/share.js');\nconst shareRecordPV = require('./model/shareRecordPV.js');\nconst shareRecordUV = require('./model/shareRecordUV.js');\n\nmodule.exports = app => {\n  const models = {\n    share,\n    shareRecordPV,\n    shareRecordUV,\n  };\n  return models;\n};\n","module.exports = app => {\n  const routes = [\n    {\n      method: 'post',\n      path: 'share/generate',\n      controller: 'share',\n      meta: {\n        auth: { user: true },\n      },\n    },\n    { method: 'get', path: 'go/:uuid', controller: 'share', action: 'shareGo' },\n  ];\n  return routes;\n};\n","module.exports = app => {\n  class Share extends app.Service {\n    async generate({ host, atomId, url, user }) {\n      return await this.ctx.bean.share.generate({ host, atomId, url, user });\n    }\n\n    async shareGo({ uuid, user }) {\n      return await this.ctx.bean.share.shareGo({ uuid, user });\n    }\n  }\n\n  return Share;\n};\n","const share = require('./service/share.js');\n\nmodule.exports = app => {\n  const services = {\n    share,\n  };\n  return services;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(421);\n",""],"names":[],"sourceRoot":""}